// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Authentication Model

enum tier {
  BRONZE
  SILVER
  GOLD
  PLATINUM
}

model user {
  id        Int         @id @default(autoincrement())
  username  String      @unique
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  points    Int         @default(0)
  tier      tier?
  favorites menu_item[]
  orders    orders[]
}

// Restaurant Models

model restaurant {
  id      Int      @id @default(autoincrement())
  name    String
  address String
  phone   String
  menu    menu     @relation(fields: [menuId], references: [id])
  menuId  Int      @unique
  orders  orders[]
}

// Food Models
enum food_category {
  APPETIZERS
  WINGS
  FAJITAS
  BURGERS
  STEAKS
  SEAFOOD
  BEVERAGES
  DESSERTS
}

model menu_item {
  id                Int           @id @default(autoincrement())
  name              String        @unique
  price             Float
  description       String
  category          food_category
  favorited_by_user user?         @relation(fields: [userId], references: [id])
  userId            Int?

  menu   menu? @relation(fields: [menuId], references: [id])
  menuId Int?
}

model menu {
  id                  Int         @id @default(autoincrement())
  items               menu_item[]
  found_at_restaurant restaurant?
  restaurantId        Int?
}

// Business Models

model orders {
  id           Int        @id @default(autoincrement())
  userId       Int
  restaurantId Int
  total        Decimal    @db.Decimal(10, 2)
  user         user       @relation(fields: [userId], references: [id])
  restaurant   restaurant @relation(fields: [restaurantId], references: [id])

  @@index([userId], name: "userId")
  @@index([restaurantId], name: "restaurantId")
}
